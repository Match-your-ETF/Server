name: FastAPI Docker Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3

      - name: Docker 로그인
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker 이미지 빌드 및 푸시
        run: |
          sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest .
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

      - name: 서버에 환경 변수 파일 업로드
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/Server  # EC2 내 프로젝트 디렉토리로 이동
            echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "ENV=prod" >> .env

      - name: 서버에서 Docker Compose로 배포 실행
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/Server
            sudo docker-compose pull
            sudo docker-compose up --pull always --force-recreate -d

            # 실행 확인을 위해 로그 출력
            sleep 5
            sudo docker-compose logs fastapi-app
